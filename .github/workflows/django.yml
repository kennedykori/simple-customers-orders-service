name: Beverage Shop CI

on:
  push:
    paths:
    - '**.py'
    - '.coveragerc'
    - 'requirements.txt'
  pull_request:
    branches: [ master, staging ]

env:
  AFRICASTALKING_API_KEY: ${{ secrets.AFRICASTALKING_API_KEY }}
  AFRICASTALKING_SENDER_ID: ${{ secrets.AFRICASTALKING_SENDER_ID }}
  AFRICASTALKING_SHORT_CODE: ${{ secrets.AFRICASTALKING_SHORT_CODE }}
  AFRICASTALKING_USERNAME: ${{ secrets.AFRICASTALKING_USERNAME }}
  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
  DATABASE_USER: ${{ secrets.DATABASE_USER }}
  DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  TEST_DATABASE_NAME: ${{ secrets.TEST_DATABASE_NAME }}

jobs:
  build:
    name: Build and Run Tests
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]

    services:
      postgres:
        image: postgres:12.6
        env:
          POSTGRES_DB: ${{ secrets.TEST_DATABASE_NAME }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DATABASE_USER }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: psycopg2 prerequisites
      run: sudo apt-get install python-dev libpq-dev
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run migrations
      run: python manage.py migrate
    - name: Run tests
      run: coverage run
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true

